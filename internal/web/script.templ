package web

import "sh.devminer.xyz/internal"

templ Script(baseUrl, name, content string, matter internal.Matter) {
    <!doctype html>
    <html lang="en">
        <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <meta http-equiv="X-UA-Compatible" content="ie=edge" />
            <title>DevScripts</title>
            <meta name="darkreader-lock" />
            <link rel="stylesheet" href="/styles.css" />
        </head>
        <body class="bg-black text-white p-6 pt-8">
            <div class="flex flex-col gap-4 max-w-5xl mx-auto">
                <h1 class="text-3xl font-bold text-center text-inactive select-none">
                    <a href="/" class="hocus:text-white text-inactive transition-colors">DevScripts</a>/<span class="text-white">{name}</span>
                </h1>
                <div class="flex flex-wrap justify-center gap-2">
                    for _, tag := range matter.Tags {
                        <span class="text-inactive px-3 py-1 bg-border rounded">{tag}</span>
                    }
                </div>

                <p class="text-center" style="text-wrap: balance">{matter.Description}</p>

                <div class="relative border border-border max-w-full rounded-md w-full divide-y divide-border" data-tab="curl">
                    <div class="flex gap-2 px-4 py-3">
                        @Tab("curl", true)
                        @Tab("wget", false)
                    </div>

                    <div class="relative max-w-full w-full" data-copyable="" data-tab-name="curl">
                        <div class="absolute top-0 right-0 px-4 py-3">
                            <button type="button" class="text-inactive hocus:text-white transition-colors" aria-label="Copy to clipboard">
                                @ClipboardIcon()
                            </button>
                        </div>

                        <code class="block whitespace-pre max-w-full px-4 py-3 overflow-y-auto">
                            curl -s {baseUrl}/{name} | sh
                        </code>
                    </div>

                    <div class="relative max-w-full w-full" style="display: none" data-copyable="" data-tab-name="wget">
                        <div class="absolute top-0 right-0 p-3">
                            <button type="button" class="text-inactive hocus:text-white transition-colors" aria-label="Copy to clipboard">
                                @ClipboardIcon()
                            </button>
                        </div>

                        <code class="block whitespace-pre max-w-full px-4 py-3 overflow-y-auto">
                            wget -qO- {baseUrl}/{name} | sh
                        </code>
                    </div>
                </div>

                <div class="relative border border-border max-w-full rounded-md w-full" data-copyable="">
                    <div class="absolute flex gap-2 top-0 right-0 p-3">
                        <button type="button" class="text-inactive hocus:text-white transition-colors" aria-label="Copy to clipboard">
                            @ClipboardIcon()
                        </button>
                        <a href={templ.SafeURL(F("/%s", name))} download class="text-inactive hocus:text-white transition-colors" aria-label="Download script">
                            @DownloadIcon()
                        </a>
                    </div>

                    <code class="block whitespace-pre max-w-full px-4 py-3 overflow-y-auto [&>pre]:!bg-transparent [&>pre]:!w-max">
                        @templ.Raw(content)
                    </code>
                </div>
            </div>

            @PasteListener()
            @TabListener()
        </body>
    </html>
}

templ Tab(label string, active bool) {
    <button data-active={F("%v", active)} type="button" class="select-none text-inactive px-3 py-1 rounded tab-active:bg-border tab-active:text-white hocus:text-white transition-colors">{label}</button>
}

templ ClipboardIcon() {
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192c.373-.03.748-.057 1.124-.08M15.75 18H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 0 0-3.375-3.375h-1.5a1.125 1.125 0 0 1-1.125-1.125v-1.5A3.375 3.375 0 0 0 6.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0 0 15 2.25h-1.5a2.251 2.251 0 0 0-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 0 0-9-9"/></svg>
}

templ DownloadIcon() {
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"/></svg>
}

script PasteListener() {
    const copyables = document.querySelectorAll('[data-copyable]');

    for (const copyable of copyables) {
        const button = copyable.querySelector('button');
        const code = copyable.querySelector('code');

        if (navigator.clipboard === undefined) {
            button.style.display = 'none';
            continue;
        }

        button.addEventListener('click', () => {
            navigator.clipboard.writeText(code.textContent);
        });
    }
}

script TabListener() {
    const tabables = document.querySelectorAll('[data-tab]');

    for (const tabable of tabables) {
        const buttons = tabable.querySelectorAll('[data-active]');
        const tabs = tabable.querySelectorAll('[data-tab-name]');

        for (const button of buttons) {
            button.addEventListener('click', () => {
                for (const tab of tabs) {
                    tab.style.display = 'none';
                }

                const tab = tabable.querySelector(`[data-tab-name="${button.textContent.toLowerCase()}"]`);
                tab.style.display = 'block';

                for (const button of buttons) {
                    button.dataset.active = 'false';
                }

                button.dataset.active = 'true';
            });
        }
    }
}
